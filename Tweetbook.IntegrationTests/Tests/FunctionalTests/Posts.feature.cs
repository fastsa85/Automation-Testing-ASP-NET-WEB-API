// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tweetbook.Tests.Integration.Tests.FunctionalTests
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Posts")]
    public partial class PostsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "Posts.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Posts", "\tIn order to perform actions with Posts\r\n\tAs Tweetbook user\r\n\tI want to list, cre" +
                    "ate, edit and delete posts", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table141.AddRow(new string[] {
                        "JohnDoe@mail.com",
                        "Dummy#123"});
            table141.AddRow(new string[] {
                        "JackSmith@box.com",
                        "qwerTy!098"});
#line 7
 testRunner.Given("Register Users", ((string)(null)), table141, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "PostTitle",
                        "PostContent",
                        "UserId"});
            table142.AddRow(new string[] {
                        "11111111-61a4-4714-b6cd-1b1dae19bdec",
                        "Post One",
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
                        "11111111-c97d-46e3-a3c9-6c4fd63cef9e"});
            table142.AddRow(new string[] {
                        "22222222-61a4-4714-b6cd-1b1dae19bdec",
                        "Post Two",
                        "Lectus urna duis convallis convallis tellus id interdum.",
                        "22222222-1111-46e3-a3c9-6c4fd63cef9e"});
            table142.AddRow(new string[] {
                        "33333333-61a4-4714-b6cd-1b1dae19bdec",
                        "Post Three",
                        "Diam quam nulla porttitor massa id neque aliquam vestibulum.",
                        "22222222-1111-46e3-a3c9-6c4fd63cef9e"});
            table142.AddRow(new string[] {
                        "44444444-61a4-4714-b6cd-1b1dae19bdec",
                        "Post Four",
                        "Parturient montes nascetur ridiculus mus mauris.",
                        "33333333-1111-46e3-a3c9-6c4fd63cef9e"});
#line 11
 testRunner.Given("\"Post\" records exist in database", ((string)(null)), table142, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User can create new post, update and delete his posts")]
        public virtual void UserCanCreateNewPostUpdateAndDeleteHisPosts()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User can create new post, update and delete his posts", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table143.AddRow(new string[] {
                            "JohnDoe@mail.com",
                            "Dummy#123"});
#line 19
 testRunner.When("Login as", ((string)(null)), table143, "When ");
#line hidden
                TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table144.AddRow(new string[] {
                            "Post One",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"});
                table144.AddRow(new string[] {
                            "Post Two",
                            "Lectus urna duis convallis convallis tellus id interdum."});
                table144.AddRow(new string[] {
                            "Post Three",
                            "Diam quam nulla porttitor massa id neque aliquam vestibulum."});
                table144.AddRow(new string[] {
                            "Post Four",
                            "Parturient montes nascetur ridiculus mus mauris."});
#line 22
 testRunner.Then("Assert get all \"Post\" returns list of objects", ((string)(null)), table144, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table145.AddRow(new string[] {
                            "My New Post",
                            ".NET is a free, cross-platform, open source developer platform for building many " +
                                "different types of applications."});
#line 28
 testRunner.When("Create new \"Post\" object", ((string)(null)), table145, "When ");
#line hidden
                TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table146.AddRow(new string[] {
                            "Post One",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"});
                table146.AddRow(new string[] {
                            "Post Two",
                            "Lectus urna duis convallis convallis tellus id interdum."});
                table146.AddRow(new string[] {
                            "Post Three",
                            "Diam quam nulla porttitor massa id neque aliquam vestibulum."});
                table146.AddRow(new string[] {
                            "Post Four",
                            "Parturient montes nascetur ridiculus mus mauris."});
                table146.AddRow(new string[] {
                            "My New Post",
                            ".NET is a free, cross-platform, open source developer platform for building many " +
                                "different types of applications."});
#line 31
 testRunner.Then("Assert get all \"Post\" returns list of objects", ((string)(null)), table146, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table147.AddRow(new string[] {
                            "Updated! Post",
                            "ASP stands for Active Server Pages. ASP is a development framework for building w" +
                                "eb pages."});
#line 38
 testRunner.When("Update \"Post\" object where \"PostTitle\" is \"My New Post\"", ((string)(null)), table147, "When ");
#line hidden
                TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table148.AddRow(new string[] {
                            "Post One",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"});
                table148.AddRow(new string[] {
                            "Post Two",
                            "Lectus urna duis convallis convallis tellus id interdum."});
                table148.AddRow(new string[] {
                            "Post Three",
                            "Diam quam nulla porttitor massa id neque aliquam vestibulum."});
                table148.AddRow(new string[] {
                            "Post Four",
                            "Parturient montes nascetur ridiculus mus mauris."});
                table148.AddRow(new string[] {
                            "Updated! Post",
                            "ASP stands for Active Server Pages. ASP is a development framework for building w" +
                                "eb pages."});
#line 41
 testRunner.Then("Assert get all \"Post\" returns list of objects", ((string)(null)), table148, "Then ");
#line hidden
#line 48
 testRunner.When("Delete \"Post\" object where \"PostTitle\" is \"Updated! Post\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table149.AddRow(new string[] {
                            "Post One",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"});
                table149.AddRow(new string[] {
                            "Post Two",
                            "Lectus urna duis convallis convallis tellus id interdum."});
                table149.AddRow(new string[] {
                            "Post Three",
                            "Diam quam nulla porttitor massa id neque aliquam vestibulum."});
                table149.AddRow(new string[] {
                            "Post Four",
                            "Parturient montes nascetur ridiculus mus mauris."});
#line 49
 testRunner.Then("Assert get all \"Post\" returns list of objects", ((string)(null)), table149, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User can not delete or update not his posts")]
        public virtual void UserCanNotDeleteOrUpdateNotHisPosts()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User can not delete or update not his posts", null, ((string[])(null)));
#line 57
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table150.AddRow(new string[] {
                            "JackSmith@box.com",
                            "qwerTy!098"});
#line 58
 testRunner.When("Login as", ((string)(null)), table150, "When ");
#line hidden
                TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table151.AddRow(new string[] {
                            "Post of JackSmith",
                            ".NET is a free, cross-platform, open source developer platform"});
#line 61
 testRunner.When("Create new \"Post\" object", ((string)(null)), table151, "When ");
#line hidden
                TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table152.AddRow(new string[] {
                            "Post One",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"});
                table152.AddRow(new string[] {
                            "Post Two",
                            "Lectus urna duis convallis convallis tellus id interdum."});
                table152.AddRow(new string[] {
                            "Post Three",
                            "Diam quam nulla porttitor massa id neque aliquam vestibulum."});
                table152.AddRow(new string[] {
                            "Post Four",
                            "Parturient montes nascetur ridiculus mus mauris."});
                table152.AddRow(new string[] {
                            "Post of JackSmith",
                            ".NET is a free, cross-platform, open source developer platform"});
#line 64
 testRunner.Then("Assert get all \"Post\" returns list of objects", ((string)(null)), table152, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Password"});
                table153.AddRow(new string[] {
                            "JohnDoe@mail.com",
                            "Dummy#123"});
#line 71
 testRunner.When("Login as", ((string)(null)), table153, "When ");
#line hidden
                TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table154.AddRow(new string[] {
                            "Trying To Update Post of JackSmith",
                            "This update should not be success as Post relates to other user"});
#line 74
 testRunner.When("Update \"Post\" object where \"PostTitle\" is \"Post of JackSmith\"", ((string)(null)), table154, "When ");
#line hidden
                TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table155.AddRow(new string[] {
                            "Post One",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"});
                table155.AddRow(new string[] {
                            "Post Two",
                            "Lectus urna duis convallis convallis tellus id interdum."});
                table155.AddRow(new string[] {
                            "Post Three",
                            "Diam quam nulla porttitor massa id neque aliquam vestibulum."});
                table155.AddRow(new string[] {
                            "Post Four",
                            "Parturient montes nascetur ridiculus mus mauris."});
                table155.AddRow(new string[] {
                            "Post of JackSmith",
                            ".NET is a free, cross-platform, open source developer platform"});
#line 77
 testRunner.Then("Assert get all \"Post\" returns list of objects", ((string)(null)), table155, "Then ");
#line hidden
#line 84
 testRunner.When("Delete \"Post\" object where \"PostTitle\" is \"Post One\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "PostContent"});
                table156.AddRow(new string[] {
                            "Post One",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"});
                table156.AddRow(new string[] {
                            "Post Two",
                            "Lectus urna duis convallis convallis tellus id interdum."});
                table156.AddRow(new string[] {
                            "Post Three",
                            "Diam quam nulla porttitor massa id neque aliquam vestibulum."});
                table156.AddRow(new string[] {
                            "Post Four",
                            "Parturient montes nascetur ridiculus mus mauris."});
                table156.AddRow(new string[] {
                            "Post of JackSmith",
                            ".NET is a free, cross-platform, open source developer platform"});
#line 85
 testRunner.Then("Assert get all \"Post\" returns list of objects", ((string)(null)), table156, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
